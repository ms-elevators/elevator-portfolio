{"version":3,"sources":["components/SoundButtons.js","components/FloorButton.js","components/DoorContent.js","sound/open.mp3","sound/close.mp3","sound/move.mp3","sound/arrive.wav","containers/Door.js","sound/bgm.mp3","App.js","reportWebVitals.js","index.js"],"names":["SoundButtons","soundSettings","type","value","onClick","FloorButton","floorNum","changeFloor","DoorContent","floor","isReady","className","CSSTransition","in","timeout","classNames","Door","sound","useState","setFloor","setReady","useSound","openSfx","playbackRate","openPlay","closeSfx","closePlay","moveSfx","volume","movePlay","arriveSfx","arrivePlay","doorSound","setTimeout","useEffect","FloorButtons","i","push","App","setSound","bgmSrc","interrupt","bgm","allow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfdda040.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function SoundButtons({ soundSettings }) {\r\n  return (\r\n    <div>\r\n      <h1>Would you like to allow sounds?</h1>\r\n      <input\r\n        type=\"button\"\r\n        value=\"yes\"\r\n        onClick={() => {\r\n          soundSettings(true);\r\n        }}\r\n      ></input>\r\n      <input\r\n        type=\"button\"\r\n        value=\"no\"\r\n        onClick={() => soundSettings(false)}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FloorButton({ floorNum, changeFloor }) {\r\n  return (\r\n    <input\r\n      type=\"button\"\r\n      value={floorNum}\r\n      onClick={() => changeFloor(floorNum)}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function DoorContent({ floor, isReady }) {\r\n  return (\r\n    <div className=\"door-container\">\r\n      <div className=\"door-inner-content\">\r\n        <h1>Current Floor: {floor}</h1>\r\n      </div>\r\n      <CSSTransition in={isReady} timeout={2000} classNames=\"door-left\">\r\n        <div className=\"door-left\"></div>\r\n      </CSSTransition>\r\n      <CSSTransition in={isReady} timeout={2000} classNames=\"door-right\">\r\n        <div className=\"door-right\"></div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/open.c5db07ba.mp3\";","export default __webpack_public_path__ + \"static/media/close.ee46a3f0.mp3\";","export default __webpack_public_path__ + \"static/media/move.1833e14c.mp3\";","export default __webpack_public_path__ + \"static/media/arrive.157e394b.wav\";","import React, { useState, useEffect } from \"react\";\r\nimport useSound from \"use-sound\";\r\n\r\n// import components\r\nimport FloorButton from \"../components/FloorButton\";\r\nimport DoorContent from \"../components/DoorContent\";\r\n\r\n// import sound source\r\nimport openSfx from \"../sound/open.mp3\";\r\nimport closeSfx from \"../sound/close.mp3\";\r\nimport moveSfx from \"../sound/move.mp3\";\r\nimport arriveSfx from \"../sound/arrive.wav\";\r\n\r\nexport default function Door({ sound }) {\r\n  const [floor, setFloor] = useState(1);\r\n  const [isReady, setReady] = useState(false);\r\n\r\n  // set sfx\r\n  const [openPlay] = useSound(openSfx, { playbackRate: 1.1 });\r\n  const [closePlay] = useSound(closeSfx, { playbackRate: 1.1 });\r\n  const [movePlay] = useSound(moveSfx, { playbackRate: 2, volume: 0.3 });\r\n  const [arrivePlay] = useSound(arriveSfx);\r\n\r\n  // when floor button is clicked\r\n  const changeFloor = (floorNum) => {\r\n    // if different floor\r\n    if (floor !== floorNum) {\r\n      if (sound) {\r\n        setReady(false);\r\n\r\n        doorSound();\r\n\r\n        setTimeout(() => movePlay(), 2000);\r\n\r\n        setTimeout(() => setFloor(floorNum), 2200);\r\n\r\n        setTimeout(() => arrivePlay(), 3500);\r\n\r\n        setTimeout(() => {\r\n          setReady(true);\r\n          doorSound();\r\n        }, 4500);\r\n      } else {\r\n        setReady(false);\r\n\r\n        setTimeout(() => setFloor(floorNum), 2000);\r\n\r\n        setTimeout(() => setReady(true), 4500);\r\n      }\r\n    }\r\n  };\r\n\r\n  // open and close door sfx\r\n  const doorSound = () => {\r\n    if (isReady && sound) {\r\n      openPlay();\r\n    } else if (!isReady && sound) {\r\n      closePlay();\r\n    }\r\n  };\r\n\r\n  // open door when mounted\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setReady(true);\r\n    }, 1500);\r\n    return;\r\n  }, []);\r\n\r\n  // floor buttons array\r\n  const FloorButtons = [];\r\n  for (let i = 1; i < 4; i++) {\r\n    FloorButtons.push(\r\n      <FloorButton key={i} floorNum={i} changeFloor={changeFloor} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Door\">\r\n      <DoorContent className=\"content\" floor={floor} isReady={isReady} />\r\n      {FloorButtons}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bgm.9012edcc.mp3\";","import React, { useState } from \"react\";\nimport useSound from \"use-sound\";\n\nimport \"./App.css\";\nimport SoundButtons from \"./components/SoundButtons\";\nimport Door from \"./containers/Door\";\n\n// import bgm\nimport bgmSrc from \"./sound/bgm.mp3\";\n\nfunction App() {\n  const [sound, setSound] = useState(null);\n\n  const [bgm] = useSound(bgmSrc, { volume: 0.3, interrupt: true });\n\n  // set sound state, play bgm if sound is true\n  const soundSettings = (allow) => {\n    setSound(allow);\n    if (allow) bgm();\n  };\n\n  return (\n    <div>\n      {/* if sound state is null, show buttons */}\n      {sound === null ? (\n        <SoundButtons soundSettings={soundSettings} />\n      ) : (\n        <Door sound={sound} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}